bool isvalid(int i,int j ,int n,int m){
    if(i<0||j<0||i>=n||j>=m)return false;
    return true;
}
bool dfs(int r,int c,vector<vector<char>>&board,string word,int ind,vector<vector<int>>&vis){
    int n=board.size();
    int m=board[0].size();
  //  vis[r][c]=1;
    if(ind==word.size())return true;
    if(isvalid(r+1,c,n,m)&&word[ind]==board[r+1][c]&&vis[r+1][c]==0){
        vis[r+1][c]=1;
        if(dfs(r+1,c,board,word,ind+1,vis))return true;
        vis[r+1][c]=0;
    }
    if(isvalid(r-1,c,n,m)&&word[ind]==board[r-1][c]&&vis[r-1][c]==0){
           vis[r-1][c]=1;
        if(dfs(r-1,c,board,word,ind+1,vis))return true;
           vis[r-1][c]=1;
    }
    if(isvalid(r,c-1,n,m)&&word[ind]==board[r][c-1]&&vis[r][c-1]==0){
           vis[r][c-1]=1;
        if(dfs(r,c-1,board,word,ind+1,vis))return true;
           vis[r][c-1]=0;
    }
    if(isvalid(r,c+1,n,m)&&word[ind]==board[r][c+1]&&vis[r][c+1]==0){
        vis[r][c+1]=1;
        if(dfs(r,c+1,board,word,ind+1,vis))return true;
        vis[r][c+1]=0;
    }
   // vis[r][c]=0;
    return false;
}
    bool isWordExist(vector<vector<char>>& board, string word) {
        // Code here
        int n=board.size();
        int m=board[0].size();
        vector<vector<int>>vis(n,vector<int>(m,0));
        for(int i=0;i<n;i++){
            for(int j=0;j<m;j++){
                if(board[i][j]==word[0]){
                    vis[i][j]=1;
                   if( dfs(i,j,board,word,1,vis))return true;
                   vis[i][j]=0;
                }
            }
        }
        return false;
    }
