int spanningTree(int v, vector<vector<int>> adj[])
    {
        // code here
        int dis[v];
        int parent[v];
        bool mstset[v];
        for(int i=0;i<v;i++){
            dis[i]=INT_MAX;
            mstset[i]=false;
            parent[i]=-1;
        }
        dis[0]=0;
      
            
        for(int i=0;i<v;i++){
            int mini=INT_MAX;
            int u;
            for(int j=0;j<v;j++){
                if(mstset[j]==false&&dis[j]<mini){
                    mini=dis[j];
                    u=j;
                }
            }
           
            mstset[u]=true;
            for(auto x:adj[u]){
                if(mstset[x[0]]==false&&dis[x[0]]>x[1]){
                    dis[x[0]]=x[1];
                    parent[x[0]]=u;
                   // cout<<dis[x[0]]<<" "<<endl;
                }
            }
            
        }
        int sum=0;
        for(int i=0;i<v;i++){
            sum=sum+dis[i];
    
        }
       
        return sum;
    }
