 int spanningTree(int v, vector<vector<int>> adj[])
    {
        // code here
        int dis[v];
        int parent[v];
        bool  mst[v];
        for(int i=0;i<v;i++){
            dis[i]=INT_MAX;
            mst[i]=false;
            parent[i]=-1;
        }
        dis[0]=0;
        priority_queue<pair<int,int>,vector<pair<int,int>>,greater<pair<int,int>>>pq;
        pq.push({0,0});
        while(!pq.empty()){
            int node=pq.top().second;
            int weight=pq.top().first;
            pq.pop();
            mst[node]=true;
            for(auto x:adj[node]){
                if(mst[x[0]]==false&&dis[x[0]]>x[1]){
                    dis[x[0]]=x[1];
                    parent[x[0]]=node;
                pq.push({dis[x[0]],x[0]});
                    
                }
            }
        }
        int sum=0;
        for(int i=0;i<v;i++){
            sum=sum+dis[i];
        }
        return sum;
    }
